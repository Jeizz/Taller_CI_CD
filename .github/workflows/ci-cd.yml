name: CI/CD para API IA

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instalar dependencias
      run: |
        pip install -r Niveles/4/api/requirements.txt

    - name: Entrenar modelo
      run: |
        cd Niveles/4/api
        python train_model.py

    - name: Login en DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: 🐳 Construir y subir imagen de la API
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api:104dcd3 ./Niveles/4/api
        docker push ${{ secrets.DOCKER_USERNAME }}/api:104dcd3

    - name: 📂 Configurar acceso a Kubernetes
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

    - name: 🧬 Desplegar en Kubernetes
      run: |
        kubectl set image deployment/api-inferencia api-inferencia=${{ secrets.DOCKER_USERNAME }}/api:104dcd3 || true

    # - name: 🚀 Aplicar cambios en Kubernetes
    #   run: |
    #     kubectl apply -f ./Niveles/4/manifests/api-deployment.yaml
    #     kubectl apply -f ./Niveles/4/manifests/api-service.yaml

    # - name: 🔁 Reiniciar el deployment para forzar pull
    #   run: |
    #     kubectl rollout restart deployment api-inferencia
